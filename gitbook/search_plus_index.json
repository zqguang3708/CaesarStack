{"./":{"url":"./","title":"SomeTechnology","keywords":"","body":"ATechnologyBook "},"Simulation/Ansys.html":{"url":"Simulation/Ansys.html","title":"Ansys","keywords":"","body":"Ansys：有限元仿真 官网 Ansys 常用分析系统模块 Steady-State Thermal（稳态热） Thermal Physics（热物理场） Mechanical APDL Solver Type（APDL求解器） Steady-State Analysis Type（稳态分析类型） Transient Thermal（瞬态热） Thermal Physics（热物理场） Mechanical APDL Solver Type（APDL求解器） Transient Analysis Type（瞬态分析类型） Static Structural（静态结构） Structural Physics（结构物理场） Mechanical APDL Solver Type（APDL求解器） Static Structural Analysis Type（静态结构分析类型） Transient Structural（瞬态结构） Structural Physics（结构物理场） Mechanical APDL Solver Type（APDL求解器） Transient Analysis Type（瞬态分析类型） Electric（电气） Electric Physics（电气物理场） Mechanical APDL Solver Type（APDL求解器） Steady-State Electric Conduction Analysis Type（稳态导电分析类型） Thermal-Electric（热-电气） Thermal-Electric Physics（热-电气物理场） Mechanical APDL Solver Type（APDL求解器） Steady-State Thermal-Electric Conduction Analysis Type（稳态热电传导分析类型） Fluid Flow (Fluent)（流体流动 (Fluent)） Fluids Physics（流体物理场） FLUENT Solver Type（FLUENT求解器） Any Analysis Type（任意分析类型） 常用组件系统模块 Fluent Fluids Physics（流体物理场） FLUENT Solver Type（FLUENT求解器） Any Analysis Type（任意分析类型） Mechanical APDL Any Physics（任意物理场） Any Solver Type（任意求解器） Any Analysis Type（任意分析类型） Microsoft Office Excel Any Physics（任意物理场） Any Solver Type（任意求解器） Any Analysis Type（任意分析类型） Engineering Data（工程数据） Any Physics（任意物理场） Any Solver Type（任意求解器） Any Analysis Type（任意分析类型） External Data（外部数据） Any Physics（任意物理场） Any Solver Type（任意求解器） Any Analysis Type（任意分析类型） Material Designer Any Physics（任意物理场） Any Solver Type（任意求解器） Any Analysis Type（任意分析类型） Geometry（几何结构） Any Physics（任意物理场） Any Solver Type（任意求解器） Any Analysis Type（任意分析类型） Mechanical Model（模型） Any Physics（任意物理场） Any Solver Type（任意求解器） Mechanical Analysis Type（Mechanical分析类型） External Model（外部模型） Any Physics（任意物理场） Any Solver Type（任意求解器） Any Analysis Type（任意分析类型） Mesh（网格） Any Physics（任意物理场） Any Solver Type（任意求解器） Any Analysis Type（任意分析类型） System Coupling（系统耦合） Multiphysics Physics（多物理场物理场） System Coupling Solver Type（系统耦合求解器） Any Analysis Type（任意分析类型） Results（结果） Fluids Physics（流体物理场） Performance Map（性能图） 单一模块 添加所需模块 直接拖动到“项目原理图”区域，或双击添加过去。 【Engineering Data工程数据】 从“工程数据源”选择相关材料 手动添加相关材料属性 导入工程数据 常用的性质： 物理属性： 密度Density 各向同性割线热膨胀系数Isotropic Secant Coefficient of Thermal Expansion 线性弹性： 各向同性弹性Isotropic Elasticity 包含杨氏模量和泊松比 热： 各向同性导热系数Isotropic Thermal Conductivity 比热容（恒压）Specific Heat Constant Pressure 【Geometry几何结构】 SpaceClaim DesignModeler 第三方导入 【Model模型】 赋予模型材料 Outline中：Geometry-某个零件-Details中：Material-Assignment：选择对应的材料 网格 Outline中：Mesh 网格分辨率 Details中：Sizing-Resolution，可选范围是0-7，越大越精细。超出范围则显示默认。 网格尺寸 右键Mesh-Insert-Sizing： Details中：Scope-Geometry：选择要设置的几何体； Details中：Definitioin-Element Size：根据缺省值设置尺寸。设置为0则显示缺省值。 网格生成方法 右键Mesh-Insert-Method： Details中：Scope-Geometry：选择要设置的几何体； Details中：Definition-Method：选择划分网格方法。一般是Hex Dominant六面体主导。此时Definition-Control Messages可能会提示，如果不影响就继续。 Details中：Definition-Free Face Mesh Type：自由面网格类型。 生成网格/更新网格 右键Mesh-Generate Mesh或Update。 质量 Details中：Statistics统计：可以查看Nodes节点数和Elements单元数。 Details中：Quality-Mesh Metric网格质量检查准则，选择相应的检查工具。检查工具包括： Element Quality单元质量检验。 【Setup设置】 Outline中：选择相应的模块进行操作。 一般模块下面会有如下部分： Initial Conditions Analysis Settings 自定义的载荷和约束 Imported Load 接受传递的载荷，不是所有的传递都有，比如Steady-State传入的就没有这个选项。 Solution 这是后面的部分 基本步骤是： 设置Initial常量 设置Analysis Settings Details中，步长信息、步数信息等均在这里设置，主要是Step Controls步控制。 步骤数量：一共有几步； 当前步数：现在在设置第几步； 步骤结束时间：当前步数的结束时间。 以上三个可以在表格数据中设置。先设置后面的再设置前面的，比如先设置第二步10s，再设置第一步3s，否则会超出边界。 如果是瞬态热+瞬态结构，第二个需要手动设置。 默认情况下，只有1步，第一步只有1s。 自动步数：有限元的求解步长。可以程序控制、关闭（手动写步长。比如步长写0.01s，则1步1s要算100step）、开启（给定一个范围，程序来控制具体是多少） 定义依据：如果非程序控制，则可以选择是按照时间设置还是按照步设置。 添加自定义的载荷和约束 在环境选项卡（新版）或工具栏的Environment工具条（旧版）。 如果是非常用载荷：Outline中：模块右键-Insert，选择相应的载荷。 设置Imported Load。 设置求解CPU： Solution的Details中：Solution-Number of Cores to Use(beta)，默认是程序控制，可以手动指定。 求解 右键模块名或右键Solution-Solve 关于自定义载荷说明 Thermal相关 Outline中：选择Steady-State Thermal或者Transient Thermal。 在环境选项卡（新版）或工具栏的Environment工具条（旧版），或者Outline中：Thermal右键-Insert，选择相应的载荷。热相关的载荷包括： Temperature温度 Convection对流（一般是与空气的换热） Radiation辐射 Heat热 Heat Flow热流 Perfectly Insulated理想绝热 Heat Flux热通量 Internal Heat Generation内部热生成 Mass Flow Rate质量流率 Conditions条件 Coupling耦合 Fluid Solid Interface流体固体界面 系统耦合区域 Element Birth and Death单元生死 Contact Step Control接触步骤控制 Commands命令 Python代码 Structural相关 Outline中：选择Static Structural或者Transient Structural。 在环境选项卡（新版）或工具栏的Environment工具条（旧版），或者Outline中：Structural右键-Insert，选择相应的载荷。结构相关的载荷包括： Inertial惯性 Acceleration加速度 Standard Earth Gravity标准地球重力 Rotational Velocity旋转速度 Rotational Acceleration旋转加速度 Loads载荷 Pressure压力 Pipe Pressure管道压力 Hydrostatic Pressure静水压压力 Force力 Remote Force远程力 Bearing Load轴承载荷 Bolt Pretension螺栓预紧力 Moment力矩 Generalized Plane Strain广义平面应变 Line Pressure线压力 Thermal Condition热条件 Pipe Temperature管道温度 Joint Load连接副载荷 Fluid Solid Interface流体固体界面 系统耦合区域 Detonation Point爆炸点 Rotating Force旋转力 导入的CFD压力 Motion Loads动态载荷 Supports支撑 Fixed Support固定的 Displacement位移 Remote Displacement远程位移 Velocity速度 Impedance Boundary阻抗边界 Frictionless Support无摩擦 极限边界 Compression Only Support仅压缩支撑 Cylindrical Support圆柱形支撑 Simply Supported简单支撑 Fixed Rotation固定旋转 固定主几何体 Elastic Support弹性支撑 Conditions条件 Coupling耦合 Constraint Equation约束方程 Pipe Idealization管道理想化 Nonlinear Adaptive Region非线性自适应区域 Element Birth and Death单元生死 Contact Step Control接触步骤控制 Body Control几何体控制 DirectFE直接FE Nodal Orientation节点方向 Nodal Force节点力 Nodal Pressure节点压力 Nodal Displacement节点位移 Nodal Rotation节点旋转 EM Transducer EM换能器 Commands命令 Python代码 Electric相关 Outline中：选择Steady-State Electric。 在环境选项卡（新版）或工具栏的Environment工具条（旧版），或者Outline中：Electric右键-Insert，选择相应的载荷。电气相关的载荷包括： Voltage电压 Current电流 Conditions条件 Coupling耦合 Thermal Condition热条件 Element Birth and Death单元生死 Contact Step Control接触步骤控制 Commands命令 Python代码 【Solution求解】 Outline中：模块-Solution，在求解选项卡（新版）或工具栏的Solution工具条（旧版）。 如果是非常用求解：Outline中：模块-Solution右键-Insert，选择相应的求解。 选择需要求解的性质，然后在Outline中：模块-Solution右键，Evaluate All Results评估所有结果。 关于求解性质的说明 Thermal相关 Outline中：选择Steady-State Thermal或Transient Thermal-Solution。 在求解选项卡（新版）或工具栏的Solution工具条（旧版）或者Outline中：Thermal-Solution右键-Insert，选择相应的求解。热相关的求解包括： Thermal热 Temperature温度 Total Heat Flux总热通量 Directional Heat Flux定向热通量 Error错误 Fluid Flow Rate流体流速 Fluit Heat Conduction Rate流体热传导率 Volume体积 Probe探针 Temperature温度 Heat Flux热通量 Reaction反应 Radiation辐射 Volume体积 Coordinate Systems坐标系 Contact Tool接触工具 User Defined Result用户定义的结果 Commands命令 Python结果 Python代码 Structural相关 Outline中：选择Static Structural或Transient Structural-Solution。 在求解选项卡（新版）或工具栏的Solution工具条（旧版）或者Outline中：Structural-Solution右键-Insert，选择相应的求解。结构相关的求解包括： Deformation变形 Strain应变 Stress应力 Energy能量 Damage Linearized Stress线性化应力 Campbell Diagram Volume体积 Probe探针 Coordinate Systems坐标系 Tool工具箱 User Defined Result用户定义的结果 用户定义的标准 Commands命令 Python结果 Python代码 Electric相关 Outline中：选择Steady-State Electric-Solution。 在求解选项卡（新版）或工具栏的Solution工具条（旧版）或者Outline中：Electric-Solution右键-Insert，选择相应的求解。电气相关的求解包括： Electric电气 Electric Voltage电压 Total Electric Field Intensity总电场强度 Directional Electric Field Intensity定向电场强度 Total Current Density总电流密度 Directional Current Density定向电流密度 Joule Heat焦耳热 Volume体积 Probe探针 Electric Voltage电压 Field Intensity场强度 Current Density电流密度 Reaction反应 Joule Heat焦耳热 Volume体积 Coordinate Systems坐标系 User Defined Result用户定义的结果 Commands命令 Python结果 Python代码 【Results结果】 Outline中：模块-Solution，Details中： Solution Information求解方案信息：里面是计算是原始信息，包括计算核心数，花费时间等。 不同的性质：云图展示、表格数据、图表展示等。 关于结果的说明 特殊的，对于Transient Thermal，在Outline中：选择Transient Thermal-Solution-Solution Information，可以展开，有Temperature - Global Maximum温度-全局最大值和Temperature - Global Minimum温度-全局最小值。 其他的模块均没有。 【Parameter Set优化分析】 设置参数化输入参数 可以在建模时，在需要参数化的地方（一般是Details处），点击前面的框，会出现一个P，实现输入参数化。 设置参数化输出参数 Solution-Details中：算出结果的性质-点击前面的框，会出现一个P，实现输出参数化。 优化分析 返回Workbench，出现Parameters和Parameters Set。如果封闭，则代表此时优化设计包含了输入和输出的参数化。 右击Parameters set-Edit编辑，进入参数化设置窗口。该窗口有四个区域：Outline of All Parameters是参数总览区；Properties是控制属性区；Table of Design Points是样点布置区域，可以配置输入参数的值；Chart是图表显示区。 在Table of Design Points区域布置样本点。 计算所有样本点：点击工具栏的Update All Design Points，执行所有样本点的计算。 计算部分样本点：选中需要计算的样本点，右击-Update Selected Design Points。 去Mechanical查看某个样本点的具体信息：右击需要的样本点-Copy inputs to Current。回到Mechanical-Results，具体查看。 对数据进行分析 Workbench有五种优化分析工具：在添加模块-Design Exploration下按需添加。 分别是：Direct Optimization（直接优化工具）、Goal Driven Optimization（多目标驱动优化分析工具）、Parameters Correlation（参数相关性优化分析工具）、Response Surface（响应曲面优化分析工具）和Six Sigma Analysis（六Σ优化分析工具）。 Update后进入即可使用。 多模块耦合 共享耦合 可以按顺序先添加第一个模块，然后将第二个模块拖动到第一个模块的“求解”部分。 可以先添加一个模块，然后在“Setup设置”和“Solution求解”中右键Transfer Data数据传输通信。 以上两种方法，添加的两模块的“工程数据”、“几何结构”和“模型”应该是共享的，而前模块的“求解”传递到后模块的“设置”。 传递耦合 如果需要全模块传递，直接添加两个模块，然后把前者的“Model模型”传递给后者。 多模块允许传递情况： Steady-State Thermal + Static Structural 案例说明 结构：100*50*10 初始状态：600℃ 模拟过程：固定两端 求解：疲劳应力 分析 稳态热模块产生初始结构，然后将温度场作为载荷传递到静态结构模块，产生疲劳应力的结果。 操作过程 添加所需模块 Steady-State Thermal，Solution传递给Static Structural。 Engineering Data Geometry Model 赋予材料 Mesh Steady-State Thermal Setup Environment：Temperature：600 Solution Solution：Thermal-Temperature Solve 查看Results Static Structural Setup Environment：Fixed Support：给四个侧面设置固定约束。【固定住】 Imported Load-具体的传入载荷，Details中：Definition-Source Time：选择Worksheet即可（因为是静态结构）。然后在传入的载荷右键-Import Load。此时只会导入最后时刻的信息。 Solution Solution：Deformation-Total，Stress-Equivalent(von-Mises) Solution右键-Insert-Fatigue-Fatigue Tool，插入疲劳分析工具。 Solution-Fatigue Tool右键-Insert-Life/Damage/Safety Factor/Biaxiality Indication/Equivalent Alternating Stress。 Solve 查看Results Steady-State Thermal + Transient Thermal + Transient Structural 案例说明 结构：120*80*4 初始状态：600℃ 模拟过程：放置在20℃环境中，固定两端 求解：热应力 分析 稳态热模块产生初始结构，然后将温度场作为载荷传递到瞬态热模块，瞬态热模块的结果作为载荷传递到瞬态结构模块，瞬态结构模块产生热应力的结果。 操作过程 添加所需模块 Steady-State Thermal，Solution传递给Transient Thermal，Solution传递给Transient Structural。 Engineering Data Geometry Model 赋予材料 Mesh Steady-State Thermal Setup Environment：Temperature：600 Solution Solution：Thermal-Temperature Solve 查看Results Transient Thermal Setup Analysis Settings：共1步，分别是10s。 Environment：Convection：设置对流系数。 Solution Solution：Thermal-Temperature Solve 查看Results 查看Solution-Solution Information-Temperature-Global Maximum和Temperature-Global Minimum。 Transient Structural Setup Analysis Settings：共1步，分别是10s。 Analysis Settings：设置划分SubStep的方法，可以根据Transient Thermal设置。例如：0.1，0.01，1。 Environment：Fixed Support：给四个侧面设置固定约束。【固定住以产生热应力】 Imported Load-具体的传入载荷，Details中：Definition-Source Time：选择All或者指定时间范围。这是所需要导入的时间节点。然后在传入的载荷右键-Import Load。导入后，在Details中：Graphics Controls-By和Active Row/Time，可以根据数据行或或者时间选择要在右图展示的时间节点。 Solution Solution：Deformation-Total Solve 查看Results APDL案例 几何体之间的热辐射 Workbench仅能实现几何体对空气的辐射，几何体之间的辐射需要APDL实现。 对相应几何面进行命名 选择对应的几何面，绘图区右键-Create Named Selection创建命名选择，命名。 插入Commands载荷 APDL的单位是国际单位制。 sf,High,rdsf,1,1 sf,low,rdsf,1,1 sf,sph,rdsf,1,1 spctemp,1,100 stef,5.67e-8 radopt,0.9,1.E-5,0,1000,0.1,0.9 toff,273 命令说明： 常量：stef：斯特藩-玻尔兹曼常数 常量：toff：绝对温度和摄氏度之间的关系，K=273+℃ 常量：spctemp：空间温度 spctemp, number, Temperature分别是非封闭空间数量和温度。 表面边界条件：sf sf, nlist, label, value, value2分别是节点列表（或者命名选择），模块标签名（辐射的标签是rdsf），表面发射率，封闭体数量 辐射求解器：radopt radopt, fluxrelx, fluxtol, solver, maxiter, toler, overrlex，分别是全局的松弛因子，辐射热通量收敛容差（默认0.001），求解器（0为Gauss-Seidel，1为直接求解器），最大迭代次数（默认1000），收敛容差（默认0.1），求解器的松弛因子（默认0.1）。 相变模拟 对零件添加焓值 Outline中：Geometry-需要添加焓值的零件右键-Insert-Commands命令 mptemp, 1, 0, 695, 697, 1000 mpdata, enth, matid, 0, 1.6857E+9, 2.7614E+9, 3.6226E+9 命令说明： 温度：mptemp：mptemp, sloc, T1, T2, ... 焓值：mpdata：mpdata, lab, mat, sloc, C1, C2, ... 插入Commands载荷 cmsel,s,thesand nsle ic,all,temp,25 cmsel,s,thewheel nsle ic,all,temp,800 alls neqit,100 lnsrch,on 高级操作 APDL手册 官方手册 单机多核并行计算 查看本机配置 任务管理器-性能选项卡，里面可以看到插槽数量（CPU的个数）、内核（物理内核数，所有CPU的加起来）、逻辑处理器（超线程后的线程数）、内存大小和GPU型号。 Ansys选用的是物理核心数，为了保证其他程序的正确运行，一般比内核稍微少一点。例如，24核心48线程的服务器，一般Ansys设置为20。 配置方法 Workbench-Tools-Options： Appearance：Beta Options Solution Process：Default Execution Mode：Parallel Solution Process：Default Number of Processes：20 Mechanical APDL：Database Memory：16384 M Mechanical APDL：Workspace Memory：32768 M Mechanical APDL：Processors：20 Mechanical APDL：GPU Accelerator：NVIDIA Mechanical APDL：Number of GPUs per Machine：1 Mechanical：Parallel Processing：Limit Number of Cores for Data Mapping and Post-Processing Mechanical：Maximum Number of Cores：20 Mechanical-Mesh： Advanced：Number of CPUs for Parallel Part Meshing：20 Mechanical-Solution： Solution：Number of Cores to Use(Beta)：20 工具配合 与SolidWorks配合 Ansys与CAD集成设置 程序为：CAD Configuration Manager 2022 R1，位置一般在： C:\\Program Files\\ANSYS Inc\\v221\\commonfiles\\CAD\\bin\\winx64\\Ans.CadInt.CADConfigUtilityGUI.exe 其中v221代表版本号，选择对应的版本。 使用管理员身份运行。 在CAD选择(CAD Selection)选项卡，勾选SolidWorks，然后点选Workbench关联接口(Workbench Associative Interface)，在CAD配置(CAD Configuration)选项卡，选择配置选定的CAD界面(Configure Selected CAD Interfaces)。 如果提示Success，则代表配置成功，退出(Exit)即可。 经过以上方法配置后，就可以直接链接SolidWorks了。也可以直接导入SolidWorks的专属模型.SLDPRT和.SLDASM。 但是这种方法需要Ansys和SolidWorks的版本配合，有时候会出现一些斯巴达问题。 中间格式文件传递 SolidWorks转储为以下中间格式，然后Ansys读取这些格式的文件进行导入。 .igs 中文显示正常 结构会被分割开 .step 中文名字会乱码 结构完整 .x_t 中文显示正常 结构完整 优先考虑 "},"Technology/Git.html":{"url":"Technology/Git.html","title":"Git","keywords":"","body":"Git：分布式版本控制软件 这意味着，本地也会有版本控制仓库（V1、V2、V3版本），本地修改后，一般先（把V4）提交到本地的版本控制仓库，再（把V4）推送到中心服务器仓库。 官网 Git官网 Git for Windows git的相关工作区域 工作区 已入版本库 新修改 暂存区 版本库 FIRST COMMAND git --version git --help git help xxx 全局初始化 配置文件相关 项目配置文件 文件位置：当前项目文件/.git/config --local 全局配置文件 文件位置：~/.gitconfig --global 系统配置文件 文件位置：/etc/.gitconfig --system 个人信息配置 git config --global user.name \"Hasee\" git config --global user.email \"940@qq.com\" 验证配置： git config --global --get-all user.name git config --global --get-all user.email git config --list 开始仓库 开始仓库有两种方法： 创建新的仓库 克隆仓库 下面介绍创建新的仓库，克隆仓库见Github克隆仓库。 仓库初始化 进入仓库目录 git init 初始化后产生.git文件夹。 .git文件夹：存放着Git管理信息的目录，初始化仓库时会自动创建。 如果想移除仅仅移除git而保留项目文件，则只需要删除.git文件夹即可。 另外，可用自行创建.gitignore文件，里面放着git忽略的文件（git不管理的文件），一个文件一行，可以用通配符。 日常使用 参考git相关工作区域部分。 检测文件的状态 git status 如果没有修改或者已经commit了，则不显示 如果修改了还未add，则显示红色modified 如果修改了，add了，但是没有commit，则显示绿色modified git diff 只显示修改了还未add的具体修改情况。 查看版本信息 git log git log --graph --pretty=format:\"%h %s\" git reflog # 可以查看被reset的版本，即之后的版本 不同文件状态之间的反复横跳 恢复回原始文件 git checkout -- xxx 修改了未add的，恢复成未修改的状态 添加到本地库暂存区 git add xxx git add . 本地库暂存区退回工作区修改状态 get reset HEAD 提交到本地版本控制仓库（生成版本） git commit -m \"注释xxx\" 从版本控制仓库退回到暂存区 git reset --soft 版本hash 从版本控制仓库退回到工作区修改状态 git reset --mix 版本hash 版本回滚【完整回滚至工作区】 git reset --hard 版本hash 分支相关 git的后一个版本只保存修改的位置，没修改的地方回通过一个指针指向前一个版本。 主分支一般默认是master。 查看分支 git branch 其中带*的绿色的是当前分支。 创建分支 git branch xxx 新创建的分支指向当前分支的当前版本。 删除分支 git branch -d xxx 切换分支 git checkout xxx 合并分支 git merge xxx 将xxx分支的内容合并到当前分支上。 合并的时候可能出现冲突，解决方法是手动修复，然后重新提交（add、commit）。 解决冲突的高阶操作见配合Beyond Compare解决冲突。 变基 作用是将多个提交记录合并成一个。 申请合并 git rebase -i 版本Hash 从该版本到现在的提交记录合并 git rebase -i HEAD~3 最近三次提交合并 修改合并后的记录情况 将 pick 123231 pick 123232 pick 123233 修改为： pick 123231 s 123232 s 123233 pick是保留的版本，其他的改为s。 commit提交。 版本标签相关 可以认为是版本的别名，在Github上可以显示。 git tag -a v1 -m \"xxx\" 在本次记录上打一个tag标签 推送到远程 git push origin --tags Github配合 连接到Github上 本地创建密钥 ssh-keygen -t -rsa -C \"940@qq.com\" 在~.ssh目录中（如C:\\Users\\zqg.ssh），生成了id_rsa和id_rsa.pub文件。其中前者是私钥，后者是公钥。 将密钥上传到Github上 在Github-头像-Settings-SSH and GPG keys-New SSH key，添加公钥的内容。 测试联通性 ssh -T git@github.com 与远程库关联 检查本地的库是否已经关联 git remote -v 添加关联 git remote add origin \"http://github.com/zqg/test.git\" 意思是添加了一个本地标识（别名）：origin，这个别名指向后面的URL。 删除关联 git remote remove origin 推送 完整写法： git push origin main master origin是关联的本地标识，main是本地分支，master是远程分支。 远程分支可以缺省，则与本地同名。 git push -u origin main master -u意思是设为默认，以后可以直接缺省推送： git push 拉取 克隆（首次拉取） git clone http://github.com/zqg/test.git ./ ./可以缺省，则在当前目录下创建一个子文件夹，名字为远程库名。 此时，拉取的仓库只显示master分支，但是依然可以直接切换分支。（只是切换前不显示而已） 往本地仓库拉取合并 git pull origin xxx 这个命令等同于： git fetch origin xxx git merge origin origin/xxx 或者 git fetch origin xxx git rebase origin/xxx 其中，fetch是把远程仓库拉到本地版本库，merge是把本地版本库放回本地工作区。 协同工作 在Github-头像-Settings-Collaborators，邀请用户即可添加协同工作者。 高阶操作 配合Beyond Compare解决冲突 git config --global merge.tool bc git config --global mergetool.path 'D:\\BeyondCompare\\BCompare.exe' git config --global mergetool.keepBackup false 使用方法： git mergetool "},"Technology/GitBook.html":{"url":"Technology/GitBook.html","title":"GitBook","keywords":"","body":"GitBook 本地版基本信息 有本地版和网页版两种。推荐使用本地版。 网页版：GitBook网页版 以下介绍本地版。 本地版依赖node.js，且由于GitBook长期未维护，只能使用v10.21.0及之前的版本。所以推荐使用nvm管理node.js。 GitBook in npm 在npm官网搜索GitBook，里面会有具体的说明。 安装 npm install gitbook-cli -g FIRST COMMAND 查看版本： gitbook -v 初始化项目 在项目文件夹中， gitbook init 会自动创建README.md和SUMMARY.md，分别是介绍文档和目录文档。 和Github类似，GitBook也提供了忽略文件，GitBook会依次读取.gitignore，.bookignore，.ignore文件。一个文件一行，可以用通配符。 npm init 由于后面使用npm管理，所以需要进行npm初始化。 如果你真的不使用npm管理，也可以不进行这一步。 会自动创建npm项目的配置文件package.json。 初始化配置和插件 初始化配置文件 在项目文件夹根目录新建book.js或book.json文件，作为配置文件。 注意，json文件内不能含有注释。如果想加注释，只能用js文件。 常用配置如下，以book.json为例： { \"title\": \"书名\", \"description\": \"描述\", \"isbn\": \"图书编号\", \"author\": \"作者\", \"lang\": \"zh-cn\", \"plugins\": [\"search-pro\", \"code\", \"expandable-chapters\", \"back-to-top-button\", \"theme-lou\"], \"pluginsConfig\": { \"fontSettings\": { \"theme\": \"sepia\", \"family\": \"sans\", \"size\": 4 } }, \"vairables\": {} } 插件相关 查找插件 插件同样在npm官网搜索，关键词为gitbook-plugin-。 常用插件列举 增强搜索 npm install gitbook-plugin-search-pro 代码框 npm install gitbook-plugin-code 菜单折叠 npm install gitbook-plugin-expandable-chapters 返回顶部 npm install gitbook-plugin-back-to-top-button 自动创建目录 npm i gitbook-plugin-toc 这里的目录是指页面内顶端的页内目录，需要在需要插入的地方插入代码： 注意：因为有些时候会有BUG，且很多时候前端模板可以自动生成，所以弃用。 自动更新SUMMARY文件 npm i gitbook-plugin-summary-pro 注意：为了防止出现BUG，在book.json中，这个尽量放在第一个。 自定义主题插件 npm install gitbook-plugin-theme-主题名 插件安装方法 在配置文件中（book.js或book.json）下的plugins的list里添加插件名。只添加gitbook-plugin-后面的即可，如： search-pro code expandable-chapters back-to-top-button toc summary-pro theme-主题名 theme-aleen42 theme-beauty theme-comscore theme-cuav theme-door theme-gestalt-yl theme-het-ycy theme-jolie theme-lou theme-seers 有一些插件，需要额外的配置，例如summary-pro，需要额外在book.json中配置： \"pluginsConfig\": { \"summary-pro\": { \"firstpage\": { \"title\": \"SomeTechnology\" } } }, 比较好的theme beauty lou aleen42 comscore Write Book 章节配置说明 SUMMARY.md是链接列表文件，名字是章节的名字，链接指向章节文件的路径。 子章节可以直接内嵌。 例如： # 概要 - [第一章](part1/README.md) - [1.1 第一节](part1/writing.md) - [1.2 第二节](part1/gitbook.md) - [第二章](part2/README.md) - [2.1 第一节](part2/feedback_please.md) - [2.2 第二节](part2/better_tools.md) 具体内容 直接写相关md文件即可。 启动项目 有两种方法进行： 使用gitbook管理运行 使用npm管理运行 有两种启动方式： 打包成HTML静态文件并启动Web服务 仅打包成HTML静态文件 这两种方法都可以任意选择启动方式。 但是，npm管理方法的扩展性更好，推荐这个方法。 GitBook管理运行 打包并启动Web服务 在项目文件夹中， gitbook serve 在项目根目录会生成book文件夹，里面是HTML静态文件。同时可以通过以下网址访问。 http://localhost:4000 仅打包成HTML静态文件 在项目文件夹中， gitbook build 同上，只不过不会开启Web服务。 npm管理运行 修改package.json文件，在scripts下面添加： \"scripts\":{ \"serve\": \"rmdir /S /Q _book && gitbook serve\", \"build\": \"rmdir /S /Q _book && gitbook build\" } 注意：这里的删除是防止产生冗余干扰。 然后通过以下命令运行： npm run serve npm run build 使用效果同上。 高阶操作 Nginx配置文件参考 server { listen 8065; server_name 你的服务器IP; location / { charset utf-8; root /electronic-book-demo/build/; index index.html index.htm; } } server { listen 80; server_name demo.域名.com; location / { charset utf-8; root /electronic-book-demo/build/; index index.html index.htm; } } 他山之石 插件参考 "},"Technology/Nginx.html":{"url":"Technology/Nginx.html","title":"Nginx","keywords":"","body":"Nginx 官网 Nginx Nginx官方使用方法 安装 解压即可使用。 FIRST COMMAND 查看版本： nginx -v 配置 Nginx使用他运行的目录作为配置中相对路径的前缀。 配置文件 在当前工作目录/conf/nginx.conf文件。 监听端口 http/server/listen可以设置监听端口。 负载均衡 http/server/location/proxy_pass可以设置请求转发地址池。 weight是各服务器被访问到的权重，数值越大访问到的几率越高。 静态资源 /hhtp/server/location/ 例如： index index.html 错误日志文件 在当前工作目录/logs/error.log文件。 使用方法 进入工作目录。 开启Nginx服务 start nginx 开启后访问以下网址进行测试： http://localhost 查看Nginx服务 tasklist /fi \"imagename eq nginx.exe\" 其中有两个Nginx进程，一个是主进程，一个是工作进程。 关闭Nginx服务 nginx -s stop nginx -s quit 前者是快速停止，可能并不保存相关信息；后者是完整有序的停止，并保存相关信息。 使用新配置重载 nginx -s reload 重写log文件 nginx -s reopen 缺陷 多副本启动 尽管可以启动多个副本，但是只有一个可以工作。 UDP相关 不支持UDP代理。 "},"Technology/Node.js.html":{"url":"Technology/Node.js.html","title":"Node.Js","keywords":"","body":"Node.js 说明 相关的有三个软件： Node.js本体 Node.js官网 npm Node.js包管理器，会随本体自动安装 npm官网 nvm Node.js版本管理器，需要自行安装 nvm in Github nvm for Windows 安装 有两种安装思路： 利用nvm安装 手动安装 推荐使用nvm安装，因为有的包只能使用相应版本的Node.js。 利用nvm安装 直接安装nvm。 查看已安装的版本 nvm list 查看所有可以安装的版本 nvm list available 安装指定版本（同时包括Node.js本体和npm） nvm install 14.0.0 查看当前版本 nvm current 切换当前版本 nvm use 14.0.0 手动安装 下载对应版本直接安装。 FIRST COMMAND node -v npm -v node -h 使用方法 初始化环境 进入项目文件夹 npm init 查看安装的插件 npm list 查找插件 在npm官网搜索需要的包，里面有具体的使用说明。 安装插件 npm install xxx npm i xxx 运行插件 npm run npm run xxx "},"Technology/Playwright.html":{"url":"Technology/Playwright.html","title":"Playwright","keywords":"","body":"Playwright 官网 Playwright 安装 安装Playwright库本体 pip install playwright 安装浏览器驱动文件 python -m playwright install 包括Chromium、Firefox、WebKit等浏览器的驱动文件 使用方法 Playwright支持自动录制，且非常智能。录制完成后会自动生成代码文件，然后根据需要修改代码文件。 录制 录制帮助 python -m playwright codegen --help 常用录制命令 python -m playwright codegen --target python -o \"out.py\" -b chromium http://xxx.xxx 其中： -target：规定生成脚本的语言，可以选择JS和Python，缺省为Python -b：规定浏览器驱动 -o：将录制脚本保存到一个文件 关闭浏览器即可结束录制。 手动处理代码文件 创建浏览器 browser = playwright.chromium.launch(headless=False) 创建context context = browser.new_context() 创建标签页面 page = context.new_page() 添加Cookies with sync_playwright() as p: browser_type = p.chromium browser = browser_type.launch(headless=False) context = browser.newContext() context.addCookies(cookies=[{'name': 'xx','value':'xx','path':'xx','domain':'xx'}, {'name': 'xx','value':'xx','path':'xx','domain':'xx'}] page1 = context.newPage() 跳转网址 page.goto('xxx') 网页定位 一般自动录制的就可以，也可以手动选择。 page.locator(\"input[name=\\\"password\\\"]\") page.locator(\"label span\") page.locator(\"canvas\") 点击 page.locator(\"input[name=\\\"password\\\"]\").click() page.locator(\"canvas\").click(position={\"x\":849,\"y\":446}) 填充字符 page.locator(\"input[name=\\\"password\\\"]\").fill(\"abcdefg\") 关闭页面、content和浏览器 page.close() context.close() browser.close() "}}